{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\BORIS OLSBY\\\\projet_test\\\\src\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\BORIS OLSBY\\\\projet_test\\\\src\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\BORIS OLSBY\\\\projet_test\\\\src\\\\client\\\\src\\\\components\\\\TaskForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect, Component } from 'react';\nimport { TaskListContext } from '../contexts/TaskListContext';\nimport uuid from 'uuid';\nimport axios from \"axios\";\nimport Button from './Button';\nconst modal = {\n  nom: \"\",\n  prenoms: \"\",\n  job: \"\"\n}; //state du champ user\n\nconst _useState = useState(modal),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\nconst handleSubmit = e => {\n  e.preventDefault(); //ajouter un user\n\n  console.log(\"sumit\", title); //AXIOS\n\n  axios.post(\"http://localhost:22000/user\", title).then(rest => {\n    console.log(\"donnees de la table\", rest);\n  });\n};\n/* if (!editItem) {\n  addTask(title)\n  setTitle({...modal})\n} else {\n  editTask({...modal}, editItem.uuid())\n}\n} */\n\n\nconst handleChange = e => {\n  e.preventDefault();\n  console.log(\"handle\", e.target.value);\n  setTitle(_objectSpread({}, title, {\n    [e.target.id]: e.target.value\n  }));\n}; //destructuring des variables\n\n\nconst nom = title.nom,\n      prenoms = title.prenoms,\n      job = title.job;\nconsole.log(title.nom);\n\nclass TaskForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"odin\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"odin\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \"Odin\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"thor\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \"Thor\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      value: nom,\n      onChange: handleChange,\n      required: true,\n      id: \"nom\",\n      className: \"task-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"prenom\",\n      value: prenoms,\n      onChange: handleChange,\n      required: true,\n      id: \"prenoms\",\n      className: \"task-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"job\",\n      value: job,\n      onChange: handleChange,\n      required: true,\n      id: \"job\",\n      className: \"task-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn add-task-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, editItem ? 'Edit Tas' : 'Ajouter')));\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["C:/Users/BORIS OLSBY/projet_test/src/client/src/components/TaskForm.js"],"names":["React","useState","useContext","useEffect","Component","TaskListContext","uuid","axios","Button","modal","nom","prenoms","job","title","setTitle","handleSubmit","e","preventDefault","console","log","post","then","rest","handleChange","target","value","id","TaskForm","state","onChange","setState","render","editItem"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Component } from 'react'\nimport { TaskListContext } from '../contexts/TaskListContext'\nimport uuid from 'uuid';\nimport axios from \"axios\"\nimport Button from './Button';\n\n  \n  const modal=\n  { \n    nom:\"\",\n    prenoms:\"\",\n    job:\"\"\n  }\n  //state du champ user\n  const [title, setTitle] = useState(modal)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    //ajouter un user\n    console.log(\"sumit\",title)\n    //AXIOS\n    axios.post(\"http://localhost:22000/user\",title)\n    .then(rest=>{\n      console.log(\"donnees de la table\",rest)\n    })\n  }\n\n\n    /* if (!editItem) {\n      addTask(title)\n      setTitle({...modal})\n    } else {\n      editTask({...modal}, editItem.uuid())\n    }\n  } */\n\n  const handleChange = e => {\n    e.preventDefault()\n    console.log(\"handle\",e.target.value)\n    setTitle({...title,\n              [e.target.id]:e.target.value\n    })\n  }\n\n \n\n//destructuring des variables\nconst {nom,prenoms,job}=title;\nconsole.log(title.nom)\nclass TaskForm extends Component{\nstate = {\n  value:\"odin\"\n};\n\nonChange = e =>{\n\n this.setState({value:e.target.value})\n}\nrender(){\n\tconst {value} = this.state;\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n\n<label>\n\t\t\t\t\n\t\t\t\t<input type=\"radio\"\n \t\t\t\t       value=\"odin\"\n\t\t\t\t       onChange={this.onChange}/>\n\t\t\t\tOdin\n\t\t\t</label>\n\n\t\t\t\n\t\t\t<label>\n\t\t\t\t\n\t\t\t\t<input type=\"radio\"\n \t\t\t\t       value=\"thor\"\n\t\t\t\t       onChange={this.onChange}/>\n\t\t\t\tThor\n\t\t\t</label>\n\t\n      <input\n        type=\"text\"\n        placeholder=\"Nom\"\n        value={nom}\n        onChange={handleChange}\n        required\n        id=\"nom\"\n        className=\"task-input\"\n      />\n     \n            <input\n        type=\"text\"\n        placeholder=\"prenom\"\n        value={prenoms}\n        onChange={handleChange}\n        required\n        id=\"prenoms\"\n        className=\"task-input\"\n      />\n       <input\n        type=\"text\"\n        placeholder=\"job\"\n        value={job}\n        onChange={handleChange}\n        required\n        id=\"job\"\n        className=\"task-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? 'Edit Tas' : 'Ajouter'}\n        </button>\n       \n      </div>\n    </form>\n  )\n}\n}\n\nexport default TaskForm\n\n"]},"metadata":{},"sourceType":"module"}