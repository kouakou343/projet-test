{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\BORIS OLSBY\\\\OLSBY\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\BORIS OLSBY\\\\OLSBY\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\BORIS OLSBY\\\\OLSBY\\\\src\\\\components\\\\TaskForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskListContext } from '../contexts/TaskListContext';\nimport uuid from 'uuid';\n\nconst TaskForm = props => {\n  const _useContext = useContext(TaskListContext),\n        addTask = _useContext.addTask,\n        clearList = _useContext.clearList,\n        editTask = _useContext.editTask,\n        editItem = _useContext.editItem;\n\n  const modal = {\n    id: \"\",\n    nom: \"\",\n    prenom: \"\",\n    classe: \"\"\n  }; //state du champ eleve\n\n  const _useState = useState(modal),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const handleSubmit = e => {\n    e.preventDefault(); //ajouter un eleve\n\n    console.log(\"sumit\", title);\n\n    if (!editItem) {\n      addTask(title);\n      setTitle(_objectSpread({}, modal));\n    } else {\n      editTask(_objectSpread({}, modal), editItem.uuid());\n    }\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    console.log(\"handle\", e.target.value);\n    setTitle(_objectSpread({}, title, {\n      id: uuid(),\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem[_objectSpread({}, modal)]);\n      console.log(\"editem\", editItem);\n    } else {\n      setTitle(_objectSpread({}, modal));\n    }\n  }, [editItem]); //destructuring des variables\n\n  const nom = title.nom,\n        prenom = title.prenom,\n        classe = title.classe;\n  console.log(title.nom);\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nom\",\n    value: nom,\n    onChange: handleChange,\n    required: true,\n    id: \"nom\",\n    className: \"task-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"prenom\",\n    value: prenom,\n    onChange: handleChange,\n    required: true,\n    id: \"prenom\",\n    className: \"task-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Classe\",\n    value: classe,\n    onChange: handleChange,\n    required: true,\n    id: \"classe\",\n    className: \"task-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn add-task-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, editItem ? 'Edit Tas' : 'Ajouter'), React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: clearList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"supprimer\")));\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["C:/Users/BORIS OLSBY/OLSBY/src/components/TaskForm.js"],"names":["React","useState","useContext","useEffect","TaskListContext","uuid","TaskForm","props","addTask","clearList","editTask","editItem","modal","id","nom","prenom","classe","title","setTitle","handleSubmit","e","preventDefault","console","log","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { TaskListContext } from '../contexts/TaskListContext'\nimport uuid from 'uuid'\nconst TaskForm = (props) => {\n  const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\n  \n  const modal=\n  { id:\"\",\n    nom:\"\",\n    prenom:\"\",\n    classe:\"\"\n  }\n  //state du champ eleve\n  const [title, setTitle] = useState(modal)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    //ajouter un eleve\n    console.log(\"sumit\",title)\n    if (!editItem) {\n      addTask(title)\n      setTitle({...modal})\n    } else {\n      editTask({...modal}, editItem.uuid())\n    }\n  }\n\n  const handleChange = e => {\n    e.preventDefault()\n    console.log(\"handle\",e.target.value)\n    setTitle({...title,\n              id:uuid(),\n              [e.target.id]:e.target.value\n    })\n  }\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem[{...modal}])\n      console.log(\"editem\",editItem)\n    } else {\n      setTitle({...modal})\n    }\n  }, [editItem])\n\n//destructuring des variables\nconst {nom,prenom,classe}=title;\nconsole.log(title.nom)\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        type=\"text\"\n        placeholder=\"Nom\"\n        value={nom}\n        onChange={handleChange}\n        required\n        id=\"nom\"\n        className=\"task-input\"\n      />\n     \n            <input\n        type=\"text\"\n        placeholder=\"prenom\"\n        value={prenom}\n        onChange={handleChange}\n        required\n        id=\"prenom\"\n        className=\"task-input\"\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Classe\"\n        value={classe}\n        onChange={handleChange}\n        required\n        id=\"classe\"\n        className=\"task-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? 'Edit Tas' : 'Ajouter'}\n        </button>\n        <button className=\"btn clear-btn\" onClick={clearList}>\n          supprimer\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm\n"]},"metadata":{},"sourceType":"module"}